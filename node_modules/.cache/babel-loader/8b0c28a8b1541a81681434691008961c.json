{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nexport var DISPLAYNAME_PREFIX = \"Blueprint4\";\n/** A collection of curated prop keys used across our Components which are not valid HTMLElement props. */\n\nvar INVALID_PROPS = [\"active\", \"alignText\", \"asyncControl\", \"containerRef\", \"current\", \"elementRef\", \"fill\", \"icon\", \"inputRef\", \"intent\", \"inline\", \"large\", \"loading\", \"leftElement\", \"leftIcon\", \"minimal\", \"onRemove\", \"outlined\", \"panel\", \"panelClassName\", \"popoverProps\", \"rightElement\", \"rightIcon\", \"round\", \"small\", \"text\"];\n/**\n * Typically applied to HTMLElements to filter out disallowed props. When applied to a Component,\n * can filter props from being passed down to the children. Can also filter by a combined list of\n * supplied prop keys and the denylist (only appropriate for HTMLElements).\n *\n * @param props The original props object to filter down.\n * @param {string[]} invalidProps If supplied, overwrites the default denylist.\n * @param {boolean} shouldMerge If true, will merge supplied invalidProps and denylist together.\n */\n\nexport function removeNonHTMLProps(props, invalidProps, shouldMerge) {\n  if (invalidProps === void 0) {\n    invalidProps = INVALID_PROPS;\n  }\n\n  if (shouldMerge === void 0) {\n    shouldMerge = false;\n  }\n\n  if (shouldMerge) {\n    invalidProps = invalidProps.concat(INVALID_PROPS);\n  }\n\n  return invalidProps.reduce(function (prev, curr) {\n    // Props with hyphens (e.g. data-*) are always considered html props\n    if (curr.indexOf(\"-\") !== -1) {\n      return prev;\n    }\n\n    if (prev.hasOwnProperty(curr)) {\n      delete prev[curr];\n    }\n\n    return prev;\n  }, __assign({}, props));\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAuBA,OAAO,IAAMA,kBAAkB,GAAG,YAA3B;AAkIP;;AACA,IAAMC,aAAa,GAAG,CAClB,QADkB,EAElB,WAFkB,EAGlB,cAHkB,EAIlB,cAJkB,EAKlB,SALkB,EAMlB,YANkB,EAOlB,MAPkB,EAQlB,MARkB,EASlB,UATkB,EAUlB,QAVkB,EAWlB,QAXkB,EAYlB,OAZkB,EAalB,SAbkB,EAclB,aAdkB,EAelB,UAfkB,EAgBlB,SAhBkB,EAiBlB,UAjBkB,EAkBlB,UAlBkB,EAmBlB,OAnBkB,EAoBlB,gBApBkB,EAqBlB,cArBkB,EAsBlB,cAtBkB,EAuBlB,WAvBkB,EAwBlB,OAxBkB,EAyBlB,OAzBkB,EA0BlB,MA1BkB,CAAtB;AA6BA;;;;;;;;;;AASA,OAAM,SAAUC,kBAAV,CACFC,KADE,EAEFC,YAFE,EAGFC,WAHE,EAGiB;EADnB;IAAAD;EAA4B;;EAC5B;IAAAC;EAAmB;;EAEnB,IAAIA,WAAJ,EAAiB;IACbD,YAAY,GAAGA,YAAY,CAACE,MAAb,CAAoBL,aAApB,CAAf;EACH;;EAED,OAAOG,YAAY,CAACG,MAAb,CACH,UAACC,IAAD,EAAOC,IAAP,EAAW;IACP;IACA,IAAIA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;MAC1B,OAAOF,IAAP;IACH;;IAED,IAAIA,IAAI,CAACG,cAAL,CAAoBF,IAApB,CAAJ,EAA+B;MAC3B,OAAQD,IAAY,CAACC,IAAD,CAApB;IACH;;IACD,OAAOD,IAAP;EACH,CAXE,EAWFI,aACIT,KADJ,CAXE,CAAP;AAcH","names":["DISPLAYNAME_PREFIX","INVALID_PROPS","removeNonHTMLProps","props","invalidProps","shouldMerge","concat","reduce","prev","curr","indexOf","hasOwnProperty","__assign"],"sourceRoot":"","sources":["../../../src/common/props.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}