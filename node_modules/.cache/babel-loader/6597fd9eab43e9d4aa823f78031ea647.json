{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { SPINNER_WARN_CLASSES_SIZE } from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\nexport var SpinnerSize;\n\n(function (SpinnerSize) {\n  SpinnerSize[SpinnerSize[\"SMALL\"] = 20] = \"SMALL\";\n  SpinnerSize[SpinnerSize[\"STANDARD\"] = 50] = \"STANDARD\";\n  SpinnerSize[SpinnerSize[\"LARGE\"] = 100] = \"LARGE\";\n})(SpinnerSize || (SpinnerSize = {})); // see http://stackoverflow.com/a/18473154/3124288 for calculating arc path\n\n\nvar R = 45;\nvar SPINNER_TRACK = \"M 50,50 m 0,-\".concat(R, \" a \").concat(R, \",\").concat(R, \" 0 1 1 0,\").concat(R * 2, \" a \").concat(R, \",\").concat(R, \" 0 1 1 0,-\").concat(R * 2); // unitless total length of SVG path, to which stroke-dash* properties are relative.\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength\n// this value is the result of `<path d={SPINNER_TRACK} />.getTotalLength()` and works in all browsers:\n\nvar PATH_LENGTH = 280;\nvar MIN_SIZE = 10;\nvar STROKE_WIDTH = 4;\nvar MIN_STROKE_WIDTH = 16;\n\nvar Spinner =\n/** @class */\nfunction (_super) {\n  __extends(Spinner, _super);\n\n  function Spinner() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Spinner.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.value !== this.props.value) {\n      // IE/Edge: re-render after changing value to force SVG update\n      this.forceUpdate();\n    }\n  };\n\n  Spinner.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        className = _b.className,\n        intent = _b.intent,\n        value = _b.value,\n        _c = _b.tagName,\n        tagName = _c === void 0 ? \"div\" : _c;\n    var size = this.getSize();\n    var classes = classNames(Classes.SPINNER, Classes.intentClass(intent), (_a = {}, _a[Classes.SPINNER_NO_SPIN] = value != null, _a), className); // keep spinner track width consistent at all sizes (down to about 10px).\n\n    var strokeWidth = Math.min(MIN_STROKE_WIDTH, STROKE_WIDTH * SpinnerSize.LARGE / size);\n    var strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : clamp(value, 0, 1)); // multiple DOM elements around SVG are necessary to properly isolate animation:\n    // - SVG elements in IE do not support anim/trans so they must be set on a parent HTML element.\n    // - SPINNER_ANIMATION isolates svg from parent display and is always centered inside root element.\n\n    return React.createElement(tagName, {\n      className: classes,\n      role: \"progressbar\"\n    }, React.createElement(tagName, {\n      className: Classes.SPINNER_ANIMATION\n    }, React.createElement(\"svg\", {\n      width: size,\n      height: size,\n      strokeWidth: strokeWidth.toFixed(2),\n      viewBox: this.getViewBox(strokeWidth)\n    }, React.createElement(\"path\", {\n      className: Classes.SPINNER_TRACK,\n      d: SPINNER_TRACK\n    }), React.createElement(\"path\", {\n      className: Classes.SPINNER_HEAD,\n      d: SPINNER_TRACK,\n      pathLength: PATH_LENGTH,\n      strokeDasharray: \"\".concat(PATH_LENGTH, \" \").concat(PATH_LENGTH),\n      strokeDashoffset: strokeOffset\n    }))));\n  };\n\n  Spinner.prototype.validateProps = function (_a) {\n    var _b = _a.className,\n        className = _b === void 0 ? \"\" : _b,\n        size = _a.size;\n\n    if (size != null && (className.indexOf(Classes.SMALL) >= 0 || className.indexOf(Classes.LARGE) >= 0)) {\n      console.warn(SPINNER_WARN_CLASSES_SIZE);\n    }\n  };\n  /**\n   * Resolve size to a pixel value.\n   * Size can be set by className, props, default, or minimum constant.\n   */\n\n\n  Spinner.prototype.getSize = function () {\n    var _a = this.props,\n        _b = _a.className,\n        className = _b === void 0 ? \"\" : _b,\n        size = _a.size;\n\n    if (size == null) {\n      // allow Classes constants to determine default size.\n      if (className.indexOf(Classes.SMALL) >= 0) {\n        return SpinnerSize.SMALL;\n      } else if (className.indexOf(Classes.LARGE) >= 0) {\n        return SpinnerSize.LARGE;\n      }\n\n      return SpinnerSize.STANDARD;\n    }\n\n    return Math.max(MIN_SIZE, size);\n  };\n  /** Compute viewbox such that stroked track sits exactly at edge of image frame. */\n\n\n  Spinner.prototype.getViewBox = function (strokeWidth) {\n    var radius = R + strokeWidth / 2;\n    var viewBoxX = (50 - radius).toFixed(2);\n    var viewBoxWidth = (radius * 2).toFixed(2);\n    return \"\".concat(viewBoxX, \" \").concat(viewBoxX, \" \").concat(viewBoxWidth, \" \").concat(viewBoxWidth);\n  };\n\n  Spinner.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Spinner\");\n  return Spinner;\n}(AbstractPureComponent2);\n\nexport { Spinner };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,OAAjC,QAAgD,cAAhD;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,kBAAT,QAAuD,oBAAvD;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,WAAYC,WAAZ;;AAAA,WAAYA,WAAZ,EAAuB;EACnBA;EACAA;EACAA;AACH,CAJD,EAAYA,WAAW,KAAXA,WAAW,MAAvB,E,CAMA;;;AACA,IAAMC,CAAC,GAAG,EAAV;AACA,IAAMC,aAAa,GAAG,uBAAgBD,CAAhB,EAAiB,KAAjB,EAAiBE,MAAjB,CAAuBF,CAAvB,EAAwB,GAAxB,EAAwBE,MAAxB,CAA4BF,CAA5B,EAA6B,WAA7B,EAA6BE,MAA7B,CAAyCF,CAAC,GAAG,CAA7C,EAA8C,KAA9C,EAA8CE,MAA9C,CAAoDF,CAApD,EAAqD,GAArD,EAAqDE,MAArD,CAAyDF,CAAzD,EAA0D,YAA1D,EAA0DE,MAA1D,CAAuEF,CAAC,GAAG,CAA3E,CAAtB,C,CAEA;AACA;AACA;;AACA,IAAMG,WAAW,GAAG,GAApB;AAEA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,gBAAgB,GAAG,EAAzB;;AAmCA;AAAA;AAAA;EAA6BC;;EAA7B;;EAuFC;;EApFUC,uCAAP,UAA0BC,SAA1B,EAAiD;IAC7C,IAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKC,KAAL,CAAWD,KAAnC,EAA0C;MACtC;MACA,KAAKE,WAAL;IACH;EACJ,CALM;;EAOAJ,2BAAP;;;IACU,SAAgD,KAAKG,KAArD;IAAA,IAAEE,SAAS,eAAX;IAAA,IAAaC,MAAM,YAAnB;IAAA,IAAqBJ,KAAK,WAA1B;IAAA,IAA4BK,eAA5B;IAAA,IAA4BC,OAAO,mBAAG,KAAH,GAAQD,EAA3C;IACN,IAAME,IAAI,GAAG,KAAKC,OAAL,EAAb;IAEA,IAAMC,OAAO,GAAG3B,UAAU,CACtBG,OAAO,CAACyB,OADc,EAEtBzB,OAAO,CAAC0B,WAAR,CAAoBP,MAApB,CAFsB,GAEKQ,SACzBA,GAAC3B,OAAO,CAAC4B,eAAT,IAA2Bb,KAAK,IAAI,IADX,EACeY,EAHpB,GAItBT,SAJsB,CAA1B,CAJJ,CAWI;;IACA,IAAMW,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASpB,gBAAT,EAA4BD,YAAY,GAAGN,WAAW,CAAC4B,KAA5B,GAAqCV,IAAhE,CAApB;IACA,IAAMW,YAAY,GAAGzB,WAAW,GAAGA,WAAW,IAAIO,KAAK,IAAI,IAAT,GAAgB,IAAhB,GAAuBZ,KAAK,CAACY,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAhC,CAA9C,CAbJ,CAeI;IACA;IACA;;IACA,OAAOjB,KAAK,CAACoC,aAAN,CACHb,OADG,EAEH;MACIH,SAAS,EAAEM,OADf;MAEIW,IAAI,EAAE;IAFV,CAFG,EAMHrC,KAAK,CAACoC,aAAN,CACIb,OADJ,EAEI;MAAEH,SAAS,EAAElB,OAAO,CAACoC;IAArB,CAFJ,EAGItC;MACIuC,KAAK,EAAEf,IADX;MAEIgB,MAAM,EAAEhB,IAFZ;MAGIO,WAAW,EAAEA,WAAW,CAACU,OAAZ,CAAoB,CAApB,CAHjB;MAIIC,OAAO,EAAE,KAAKC,UAAL,CAAgBZ,WAAhB;IAJb,GAMI/B;MAAMoB,SAAS,EAAElB,OAAO,CAACM,aAAzB;MAAwCoC,CAAC,EAAEpC;IAA3C,EANJ,EAOIR;MACIoB,SAAS,EAAElB,OAAO,CAAC2C,YADvB;MAEID,CAAC,EAAEpC,aAFP;MAGIsC,UAAU,EAAEpC,WAHhB;MAIIqC,eAAe,EAAE,UAAGrC,WAAH,EAAc,GAAd,EAAcD,MAAd,CAAkBC,WAAlB,CAJrB;MAKIsC,gBAAgB,EAAEb;IALtB,EAPJ,CAHJ,CANG,CAAP;EA0BH,CA5CM;;EA8CGpB,kCAAV,UAAwBc,EAAxB,EAA8D;QAApCoB;QAAA7B,SAAS,mBAAG,EAAH,GAAK6B;QAAEzB,IAAI;;IAC1C,IAAIA,IAAI,IAAI,IAAR,KAAiBJ,SAAS,CAAC8B,OAAV,CAAkBhD,OAAO,CAACiD,KAA1B,KAAoC,CAApC,IAAyC/B,SAAS,CAAC8B,OAAV,CAAkBhD,OAAO,CAACgC,KAA1B,KAAoC,CAA9F,CAAJ,EAAsG;MAClGkB,OAAO,CAACC,IAAR,CAAalD,yBAAb;IACH;EACJ,CAJS;EAMV;;;;;;EAIQY,4BAAR;IACU,SAA2B,KAAKG,KAAhC;IAAA,IAAE+B,iBAAF;IAAA,IAAE7B,SAAS,mBAAG,EAAH,GAAK6B,EAAhB;IAAA,IAAkBzB,IAAI,UAAtB;;IACN,IAAIA,IAAI,IAAI,IAAZ,EAAkB;MACd;MACA,IAAIJ,SAAS,CAAC8B,OAAV,CAAkBhD,OAAO,CAACiD,KAA1B,KAAoC,CAAxC,EAA2C;QACvC,OAAO7C,WAAW,CAAC6C,KAAnB;MACH,CAFD,MAEO,IAAI/B,SAAS,CAAC8B,OAAV,CAAkBhD,OAAO,CAACgC,KAA1B,KAAoC,CAAxC,EAA2C;QAC9C,OAAO5B,WAAW,CAAC4B,KAAnB;MACH;;MACD,OAAO5B,WAAW,CAACgD,QAAnB;IACH;;IACD,OAAOtB,IAAI,CAACuB,GAAL,CAAS5C,QAAT,EAAmBa,IAAnB,CAAP;EACH,CAZO;EAcR;;;EACQT,+BAAR,UAAmBgB,WAAnB,EAAsC;IAClC,IAAMyB,MAAM,GAAGjD,CAAC,GAAGwB,WAAW,GAAG,CAAjC;IACA,IAAM0B,QAAQ,GAAG,CAAC,KAAKD,MAAN,EAAcf,OAAd,CAAsB,CAAtB,CAAjB;IACA,IAAMiB,YAAY,GAAG,CAACF,MAAM,GAAG,CAAV,EAAaf,OAAb,CAAqB,CAArB,CAArB;IACA,OAAO,UAAGgB,QAAH,EAAW,GAAX,EAAWhD,MAAX,CAAegD,QAAf,EAAuB,GAAvB,EAAuBhD,MAAvB,CAA2BiD,YAA3B,EAAuC,GAAvC,EAAuCjD,MAAvC,CAA2CiD,YAA3C,CAAP;EACH,CALO;;EAhFM3C,sBAAc,UAAGX,kBAAH,EAAqB,UAArB,CAAd;EAsFlB;AAAC,CAvFD,CAA6BH,sBAA7B;;SAAac","names":["classNames","React","AbstractPureComponent2","Classes","SPINNER_WARN_CLASSES_SIZE","DISPLAYNAME_PREFIX","clamp","SpinnerSize","R","SPINNER_TRACK","concat","PATH_LENGTH","MIN_SIZE","STROKE_WIDTH","MIN_STROKE_WIDTH","__extends","Spinner","prevProps","value","props","forceUpdate","className","intent","_c","tagName","size","getSize","classes","SPINNER","intentClass","_a","SPINNER_NO_SPIN","strokeWidth","Math","min","LARGE","strokeOffset","createElement","role","SPINNER_ANIMATION","width","height","toFixed","viewBox","getViewBox","d","SPINNER_HEAD","pathLength","strokeDasharray","strokeDashoffset","_b","indexOf","SMALL","console","warn","STANDARD","max","radius","viewBoxX","viewBoxWidth"],"sourceRoot":"","sources":["../../../../src/components/spinner/spinner.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}