{"ast":null,"code":"var _jsxFileName = \"/home/vallenato78/projects/courses/code401/todo-app/src/components/list/list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings';\nimport { OverflowList } from '@blueprintjs/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = _ref => {\n  _s();\n\n  let {\n    list,\n    toggleComplete\n  } = _ref;\n  const settings = useContext(SettingsContext);\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(settings.itemsToDisplay);\n  const [results, setResults] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.length > 0 ? /*#__PURE__*/_jsxDEV(OverflowList, {\n      items: list,\n      overflowRenderer: items => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: items.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Assigned to: \", items.assignee]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Difficulty: \", items.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleComplete(items.id),\n          children: [\"Complete: \", items.complete.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, items.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(List, \"XbhckDT8alWafH0kgsbCqbMzB+A=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useContext","useState","SettingsContext","OverflowList","List","list","toggleComplete","settings","start","setStart","end","setEnd","itemsToDisplay","results","setResults","length","items","text","assignee","difficulty","id","complete","toString"],"sources":["/home/vallenato78/projects/courses/code401/todo-app/src/components/list/list.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings';\nimport { OverflowList } from '@blueprintjs/core';\n\nconst List = ({ list, toggleComplete }) => {\n\n  const settings = useContext(SettingsContext);\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(settings.itemsToDisplay);\n  const [results, setResults] = useState([]);\n\n\n\n  return (\n    <>\n      {list.length > 0 ?\n        <OverflowList\n          items={list}\n          overflowRenderer={items => (\n            <div key={items.id}>\n              <p>{items.text}</p>\n              <p><small>Assigned to: {items.assignee}</small></p>\n              <p><small>Difficulty: {items.difficulty}</small></p>\n              <div onClick={() => toggleComplete(items.id)}>Complete: {items.complete.toString()}</div>\n              <hr />\n            </div>\n          )}\n        /> : null}\n      {/* {list.map(item => (\n\n      <div key={item.id}>\n          <p>{item.text}</p>\n          <p><small>Assigned to: {item.assignee}</small></p>\n          <p><small>Difficulty: {item.difficulty}</small></p>\n          <div onClick={() => toggleComplete(item.id)}>Complete: {item.complete.toString()}</div>\n          <hr />\n        </div>\n\n      ))\n      } */}\n    </>\n  )\n}\n\nexport default List;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;;AAEA,MAAMC,IAAI,GAAG,QAA8B;EAAA;;EAAA,IAA7B;IAAEC,IAAF;IAAQC;EAAR,CAA6B;EAEzC,MAAMC,QAAQ,GAAGP,UAAU,CAACE,eAAD,CAA3B;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAACM,QAAQ,CAACK,cAAV,CAA9B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;EAIA,oBACE;IAAA,UACGI,IAAI,CAACU,MAAL,GAAc,CAAd,gBACC,QAAC,YAAD;MACE,KAAK,EAAEV,IADT;MAEE,gBAAgB,EAAEW,KAAK,iBACrB;QAAA,wBACE;UAAA,UAAIA,KAAK,CAACC;QAAV;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,uBAAG;YAAA,4BAAqBD,KAAK,CAACE,QAA3B;UAAA;YAAA;YAAA;YAAA;UAAA;QAAH;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,uBAAG;YAAA,2BAAoBF,KAAK,CAACG,UAA1B;UAAA;YAAA;YAAA;YAAA;UAAA;QAAH;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAK,OAAO,EAAE,MAAMb,cAAc,CAACU,KAAK,CAACI,EAAP,CAAlC;UAAA,yBAAyDJ,KAAK,CAACK,QAAN,CAAeC,QAAf,EAAzD;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA;UAAA;UAAA;QAAA,QALF;MAAA,GAAUN,KAAK,CAACI,EAAhB;QAAA;QAAA;QAAA;MAAA;IAHJ;MAAA;MAAA;MAAA;IAAA,QADD,GAYM;EAbT,iBADF;AA6BD,CAtCD;;GAAMhB,I;;KAAAA,I;AAwCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}